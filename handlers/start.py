from aiogram import Router, types, F
from aiogram.filters import Command, CommandStart
from keyboards.menu_keyboards import categories_keyboard, cart_keyboard_with_delete
from aiogram.fsm.context import FSMContext
from keyboards.menu_keyboards import start_keyboard
from states.cart_state import CartState
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from config import ADMIN_ID

router = Router()

@router.message(CommandStart())
async def start(message: types.Message, state: FSMContext):
    data = await state.get_data()
    phone_number = data.get("phone_number")

    if phone_number:
        # –ù–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã", reply_markup=start_keyboard())
    else:
        # –ü—Ä–æ—Å–∏–º –Ω–æ–º–µ—Ä
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]
            ],
            resize_keyboard=True
        )
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:",
            reply_markup=keyboard
        )

@router.message(F.contact)
async def save_phone(message: types.Message, state: FSMContext, bot):
    phone_number = message.contact.phone_number
    await state.update_data(phone_number=phone_number)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    #await bot.send_message(ADMIN_ID, f"üì± –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞: {phone_number}")

    # –ú–µ–Ω—é –∏ –∫–æ—Ä–∑–∏–Ω–∞
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ! –ù–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=start_keyboard()
    )

@router.callback_query(lambda c: c.data == "show_categories")
async def show_categories(callback: types.CallbackQuery):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=categories_keyboard())

@router.message(lambda message: message.text == "üçî –ú–µ–Ω—é")
async def show_categories(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é üçΩÔ∏è:", reply_markup=categories_keyboard())

@router.message(lambda message: message.text == "üõí –ö–æ—Ä–∑–∏–Ω–∞")
async def show_cart_button(message: types.Message, state: FSMContext):
    data = await state.get_data()
    cart = data.get("cart", [])
    comment = data.get("comment", None)

    if cart:
        total = sum(item["price"] for item in cart)
        text = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n" + "\n".join(
            f"- {item['name']} ‚Äî {item['price']} —Å—É–º" for item in cart
        )
        text += f"\n\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total} —Å—É–º"

        if comment:
            text += f"\nüìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"

        await message.answer(text, reply_markup=cart_keyboard_with_delete(cart))
    else:
        await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")